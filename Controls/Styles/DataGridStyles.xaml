<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:missions="clr-namespace:ODEliteTracker.Models.Missions">

    <Style TargetType="{x:Type DataGrid}"
           x:Key="BaseDataGridStyle">
        <Setter Property="HeadersVisibility"
                Value="None" />
        <Setter Property="AutoGenerateColumns"
                Value="False" />
        <Setter Property="GridLinesVisibility"
                Value="None" />
        <Setter Property="IsReadOnly"
                Value="True" />
        <Setter Property="SelectionMode"
                Value="Single" />
        <Setter Property="CanUserAddRows"
                Value="False" />
        <Setter Property="CanUserDeleteRows"
                Value="False" />
        <Setter Property="CanUserResizeColumns"
                Value="False" />
        <Setter Property="CanUserSortColumns"
                Value="False" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalScrollBarVisibility"
                Value="Visible" />
        <Setter Property="VerticalScrollBarVisibility"
                Value="Visible" />
        <Setter Property="VirtualizingPanel.ScrollUnit"
                Value="Pixel" />
        <Setter Property="GridLinesVisibility"
                Value="Vertical" />
        <Setter Property="VerticalGridLinesBrush"
                Value="{DynamicResource ViewBackground}" />
    </Style>
    
    <Style TargetType="{x:Type DataGrid}"
           x:Key="DisabledSelectGrid"
           BasedOn="{StaticResource BaseDataGridStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer"
                                      Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="false"
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                    TypeInTargetAssembly={x:Type DataGrid}}}"
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All},
                                                         Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                         RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                Width="{Binding CellsPanelHorizontalOffset,
                                                    RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1"
                                                                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column},
                                                         Converter={x:Static DataGrid.HeadersVisibilityConverter},
                                                         RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                Grid.ColumnSpan="2"
                                                                Grid.Row="1" />
                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                                   Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   Grid.Row="1"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   ViewportSize="{TemplateBinding ViewportHeight}" />
                                        <Grid Grid.Column="1"
                                              Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset,
                                                                 RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                       Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       ViewportSize="{TemplateBinding ViewportWidth}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            IsHitTestVisible="False" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping"
                     Value="true">
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ConstructionResourcesDataGrid"
           TargetType="{x:Type DataGrid}">
        <Setter Property="AutoGenerateColumns"
                Value="False" />
        <Setter Property="CanUserAddRows"
                Value="False" />
        <Setter Property="CanUserDeleteRows"
                Value="False" />
        <Setter Property="CanUserReorderColumns"
                Value="False" />
        <Setter Property="CanUserResizeRows"
                Value="False" />
        <Setter Property="CanUserSortColumns"
                Value="False" />
        <Setter Property="CanUserResizeColumns"
                Value="False" />
        <Setter Property="SelectionMode"
                Value="Single" />
        <Setter Property="IsReadOnly"
                Value="True" />
        <Setter Property="IsHitTestVisible"
                Value="True" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="GridLinesVisibility"
                Value="Vertical" />
        <Setter Property="HeadersVisibility"
                Value="Column" />
        <Setter Property="HorizontalScrollBarVisibility"
                Value="Disabled" />
        <Setter Property="SelectionUnit"
                Value="FullRow" />
        <Setter Property="EnableRowVirtualization"
                Value="True" />
        <Setter Property="HorizontalGridLinesBrush"
                Value="Transparent" />
        <Setter Property="VerticalGridLinesBrush"
                Value="Transparent" />
        <Setter Property="GridLinesVisibility"
                Value="Vertical" />
        <Setter Property="VerticalGridLinesBrush"
                Value="{DynamicResource ViewBackground}" />
    </Style>

    <Style x:Key="ConstructionResourcesStyle"
           TargetType="{x:Type DataGridRow}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="IsHitTestVisible"
                Value="True" />
        <Setter Property="IsManipulationEnabled"
                Value="False" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Background"
                Value="{x:Null}" />
    </Style>

    <Style x:Key="MasscreMissionRowStyle"
           TargetType="{x:Type DataGridRow}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="IsHitTestVisible"
                Value="True" />
        <Setter Property="IsManipulationEnabled"
                Value="False" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Background"
                Value="{x:Null}" />
    </Style>
    
    <Style x:Key="NoSelectRowStyle"
           TargetType="{x:Type DataGridRow}">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="OverridesDefaultStyle"
                Value="False" />
        <Setter Property="IsHitTestVisible"
                Value="True" />
        <Setter Property="IsManipulationEnabled"
                Value="False" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Background"
                Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="DataGridElementRightMargin"
           TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="0,0,5,0" />
    </Style>

    <Style x:Key="DataGridElementRightMarginVertTop"
           TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="Margin"
                Value="0,0,5,0" />

    </Style>
    <Style x:Key="DataGridElementLeftMarginBody"
           TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="5,0,5,0" />        
    </Style>

    <Style x:Key="DataGridElementCenter"
           TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>

    <Style x:Key="DataGridElementCenterVertTop"
           TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
    </Style>
    
    <Style TargetType="{x:Type DataGridCell}"
           x:Key="MassacreGridCell">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="IsHitTestVisible"
                Value="True" />
        <Setter Property="Margin"
                Value="0,0,5,1" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding CurrentState}"
                         Value="{x:Static missions:MissionState.Active}">
                <Setter Property="Foreground"
                        Value="{DynamicResource PrimaryForeground}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding CurrentState}"
                         Value="{x:Static missions:MissionState.Redirected}">
                <Setter Property="Foreground"
                        Value="{DynamicResource MasscreMissionHighlight}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding AtStation}"
                         Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource MasscreMissionStationHighlight}" />
            </DataTrigger>       
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="{x:Null}" />
                <Setter Property="BorderBrush"
                        Value="{x:Null}" />
                <Setter Property="BorderThickness"
                        Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridCell}"
           x:Key="NoSelectCell">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="IsHitTestVisible"
                Value="False" />
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource PrimaryForeground}" />
                <Setter Property="Background"
                        Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type DataGridCell}"
           x:Key="NoSelectCellNoMargin">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="IsHitTestVisible"
                Value="True" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource PrimaryForeground}" />
                <Setter Property="Background"
                        Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridCell}"
           x:Key="OverlayCell">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="IsHitTestVisible"
                Value="False" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource PrimaryForeground}" />
                <Setter Property="Background"
                        Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type DataGridCell}"
           x:Key="RouteCells">
        <Setter Property="IsHitTestVisible"
                Value="False" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="Black" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource PrimaryForeground}" />
                <Setter Property="Background"
                        Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridCell}"
           x:Key="MassacreStackCell">
        <Setter Property="IsHitTestVisible"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="False" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Margin"
                Value="0" />
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource PrimaryForeground}" />
                <Setter Property="Background"
                        Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background"
                Value="Transparent" />
    </Style>

    <Style x:Key="DataGridHeaderLeft"
           TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Padding"
                Value="0,0,0,0" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderThickness"
                Value="0,0,0,1" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource ScrollBarLine}" />
    </Style>

    <Style x:Key="OverlayDataGridHeaderLeft"
           TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Padding"
                Value="0,0,0,0" />
        <Setter Property="Foreground"
                Value="{DynamicResource Overlay_ForegroundBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
    </Style>

    <Style x:Key="DataGridHeaderRight"
           TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
                Value="Right" />
        <Setter Property="Padding"
                Value="5,0,5,0" />
        <Setter Property="BorderThickness"
                Value="0,0,0,1" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource ScrollBarLine}" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryForeground}" />
    </Style>

    <Style x:Key="DataGridHeaderCenter"
           TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0,0,0,0" />
        <Setter Property="BorderThickness"
                Value="0,0,0,1" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource ScrollBarLine}" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryForeground}" />
    </Style>

    <Style x:Key="OverDataGridHeaderCenter"
           TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0,0,0,0" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Foreground"
                Value="{DynamicResource Overlay_ForegroundBrush}" />

    </Style>
    <Style TargetType="{x:Type DataGridRow}"
           x:Key="CommanderRowStyle">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="IsHitTestVisible"
                Value="True" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="0" />
            </Trigger>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource EliteBtnBGMouseOver}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource EliteBtnFGMouseOver}" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CmdrSelectionCellLeft"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Name="border"
                            BorderThickness="0"
                            Padding="0"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="0"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Left"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Name="content" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="0" />
            </Trigger>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource EliteBtnBGMouseOver}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource EliteBtnFGMouseOver}" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CmdrSelectionCellCenter"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Name="border"
                            BorderThickness="0"
                            Padding="0"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="0"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Name="content" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="0" />
            </Trigger>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource EliteBtnBGMouseOver}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource EliteBtnFGMouseOver}" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ButtonGridCell"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Name="border"
                            BorderThickness="0"
                            Padding="0"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="0"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Name="content" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="0" />
            </Trigger>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Foreground"
                        Value="{DynamicResource PrimaryControlForeground}" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="CmdrSelectionCellRight"
           TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Name="border"
                            BorderThickness="0"
                            Padding="0"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="0"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Right"
                                              VerticalAlignment="Center"
                                              Name="content" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="0" />
            </Trigger>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource EliteBtnBGMouseOver}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource EliteBtnFGMouseOver}" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridElementTradeRemaining"
           TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Foreground"
                Value="Red" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RemainingCountInt}"
                         Value="0">
                <Setter Property="Foreground"
                        Value="{DynamicResource PrimaryForeground}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridRow}"
           x:Key="SpanshRowStyle">
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="IsHitTestVisible"
                Value="False" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="0" />
            </Trigger>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Foreground"
                        Value="Black" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SpanshDataGrid"
           TargetType="{x:Type DataGrid}">
        <Setter Property="AutoGenerateColumns"
                Value="False" />
        <Setter Property="GridLinesVisibility"
                Value="None" />
        <Setter Property="IsReadOnly"
                Value="True" />
        <Setter Property="SelectionMode"
                Value="Single" />
        <Setter Property="CanUserAddRows"
                Value="False" />
        <Setter Property="CanUserDeleteRows"
                Value="False" />
        <Setter Property="CanUserResizeColumns"
                Value="False" />
        <Setter Property="CanUserSortColumns"
                Value="False" />
        <Setter Property="HeadersVisibility"
                Value="Column" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HeadersVisibility"
                Value="Column" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="AlternationCount"
                Value="1" />
        <Setter Property="AlternatingRowBackground"
                Value="{DynamicResource RowAlternationColour}" />
        <Setter Property="RowBackground"
                Value="Transparent" />
        <Setter Property="RowStyle"
                Value="{DynamicResource SpanshRowStyle}" />
        <Setter Property="CellStyle"
                Value="{DynamicResource CmdrSelectionCellLeft}" />
        <Setter Property="ColumnHeaderStyle"
                Value="{DynamicResource DataGridHeaderLeft}" />
    </Style>

    <Style x:Key="SpanshPopOutDataGrid"
           TargetType="{x:Type DataGrid}">
        <Setter Property="AutoGenerateColumns"
                Value="False" />
        <Setter Property="GridLinesVisibility"
                Value="None" />
        <Setter Property="IsReadOnly"
                Value="True" />
        <Setter Property="SelectionMode"
                Value="Single" />
        <Setter Property="CanUserAddRows"
                Value="False" />
        <Setter Property="CanUserDeleteRows"
                Value="False" />
        <Setter Property="CanUserResizeColumns"
                Value="False" />
        <Setter Property="CanUserSortColumns"
                Value="False" />
        <Setter Property="HeadersVisibility"
                Value="Column" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="RowBackground"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="AlternationCount"
                Value="0" />
        <Setter Property="Foreground"
                Value="{DynamicResource Overlay_ForegroundBrush}" />
        <Setter Property="RowStyle"
                Value="{DynamicResource SpanshRowStyle}" />
        <Setter Property="CellStyle"
                Value="{DynamicResource CmdrSelectionCellLeft}" />
        <Setter Property="ColumnHeaderStyle"
                Value="{DynamicResource OverlayDataGridHeaderLeft}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver}"
                         Value="True">
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                        Value="Visible" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                        Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsMouseOver}"
                         Value="False">
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                        Value="Hidden" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                        Value="Hidden" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>